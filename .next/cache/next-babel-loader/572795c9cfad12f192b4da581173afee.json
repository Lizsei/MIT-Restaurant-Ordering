{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethseidel/Documents/CODING/MODULE_31 capstone/next-restaurant-05-master/pages/restaurants/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\nconst GET_RESTAURANT_BY_ID = gql`\n  query getRestaurantById($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      description\n      image {\n        url\n      }\n      dishes {\n        id\n        name\n        description\n      }\n    }\n  }\n`;\n\nconst RestaurantPage = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_BY_ID, {\n    variables: {\n      id\n    },\n    skip: !id // Skip the query if id is not available yet\n\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  const restaurant = data.restaurant;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, restaurant.name), __jsx(\"img\", {\n    src: `http://localhost:1337${restaurant.image.url}`,\n    alt: restaurant.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, restaurant.description));\n};\n\nexport default RestaurantPage;","map":{"version":3,"sources":["/Users/elizabethseidel/Documents/CODING/MODULE_31 capstone/next-restaurant-05-master/pages/restaurants/[id].js"],"names":["useRouter","useEffect","useState","gql","useQuery","GET_RESTAURANT_BY_ID","RestaurantPage","router","id","query","loading","error","data","variables","skip","message","restaurant","name","image","url","description"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,oBAAoB,GAAGF,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;;AAkBA,MAAMG,cAAc,GAAG,MAAM;AAC3B,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACC,oBAAD,EAAuB;AAC9DQ,IAAAA,SAAS,EAAE;AAAEL,MAAAA;AAAF,KADmD;AAE9DM,IAAAA,IAAI,EAAE,CAACN,EAFuD,CAEnD;;AAFmD,GAAvB,CAAzC;AAKA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACI,OAAjB,CAAP;AAEX,QAAMC,UAAU,GAAGJ,IAAI,CAACI,UAAxB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,UAAU,CAACC,IAAhB,CADF,EAEE;AAAK,IAAA,GAAG,EAAG,wBAAuBD,UAAU,CAACE,KAAX,CAAiBC,GAAI,EAAvD;AAA0D,IAAA,GAAG,EAAEH,UAAU,CAACC,IAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,UAAU,CAACI,WAAf,CAHF,CADF;AASD,CAtBD;;AAwBA,eAAed,cAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { gql, useQuery } from '@apollo/client';\n\nconst GET_RESTAURANT_BY_ID = gql`\n  query getRestaurantById($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      description\n      image {\n        url\n      }\n      dishes {\n        id\n        name\n        description\n      }\n    }\n  }\n`;\n\nconst RestaurantPage = () => {\n  const router = useRouter();\n  const { id } = router.query;\n  const { loading, error, data } = useQuery(GET_RESTAURANT_BY_ID, {\n    variables: { id },\n    skip: !id  // Skip the query if id is not available yet\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const restaurant = data.restaurant;\n\n  return (\n    <div>\n      <h1>{restaurant.name}</h1>\n      <img src={`http://localhost:1337${restaurant.image.url}`} alt={restaurant.name} />\n      <p>{restaurant.description}</p>\n\n      {/* Display dishes here */}\n    </div>\n  );\n};\n\nexport default RestaurantPage;\n"]},"metadata":{},"sourceType":"module"}