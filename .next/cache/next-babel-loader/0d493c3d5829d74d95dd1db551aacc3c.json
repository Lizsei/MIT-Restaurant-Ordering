{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/elizabethseidel/Documents/CODING/MODULE_31 capstone/next-restaurant-05-master/pages/restaurants/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getRestaurantById($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      description\\n      image {\\n        url\\n      }\\n      dishes {\\n        id\\n        name\\n        description\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { gql, useQuery, ApolloProvider } from '@apollo/client';\nimport client from '../../utils/apolloClient'; // Adjust the import based on where you save apolloClient.js\n\nvar GET_RESTAURANT_BY_ID = gql(_templateObject());\nvar API_URL = process.env.API_URL || 'http://localhost:1337';\n\nvar RestaurantPage = function RestaurantPage() {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useQuery = useQuery(GET_RESTAURANT_BY_ID, {\n    variables: {\n      id: id\n    },\n    skip: !id\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  var restaurant = data.restaurant;\n  return __jsx(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, restaurant.name), __jsx(\"img\", {\n    src: \"\".concat(API_URL).concat(restaurant.image.url),\n    alt: restaurant.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, restaurant.description), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, restaurant.dishes.map(function (dish) {\n    return __jsx(\"li\", {\n      key: dish.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, dish.name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, dish.description));\n  }))));\n};\n\n_s(RestaurantPage, \"3cmGJmCPbWz07HwSwgYwWOwFKhw=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = RestaurantPage;\nexport default RestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"sources":["/Users/elizabethseidel/Documents/CODING/MODULE_31 capstone/next-restaurant-05-master/pages/restaurants/[id].js"],"names":["useRouter","useEffect","useState","gql","useQuery","ApolloProvider","client","GET_RESTAURANT_BY_ID","API_URL","process","env","RestaurantPage","router","id","query","variables","skip","loading","error","data","message","restaurant","name","image","url","description","dishes","map","dish"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,cAAxB,QAA8C,gBAA9C;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CAAgD;;AAEhD,IAAMC,oBAAoB,GAAGJ,GAAH,mBAA1B;AAkBA,IAAMK,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYF,OAAZ,IAAuB,uBAAvC;;AAEA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA;;AAC3B,MAAMC,MAAM,GAAGZ,SAAS,EAAxB;AAD2B,MAEnBa,EAFmB,GAEZD,MAAM,CAACE,KAFK,CAEnBD,EAFmB;;AAAA,kBAIMT,QAAQ,CAACG,oBAAD,EAAuB;AAC9DQ,IAAAA,SAAS,EAAE;AAAEF,MAAAA,EAAE,EAAFA;AAAF,KADmD;AAE9DG,IAAAA,IAAI,EAAE,CAACH;AAFuD,GAAvB,CAJd;AAAA,MAInBI,OAJmB,aAInBA,OAJmB;AAAA,MAIVC,KAJU,aAIVA,KAJU;AAAA,MAIHC,IAJG,aAIHA,IAJG;;AAS3B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACE,OAAjB,CAAP;AAEX,MAAMC,UAAU,GAAGF,IAAI,CAACE,UAAxB;AAEA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEf,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKe,UAAU,CAACC,IAAhB,CADF,EAEE;AAAK,IAAA,GAAG,YAAKd,OAAL,SAAea,UAAU,CAACE,KAAX,CAAiBC,GAAhC,CAAR;AAA+C,IAAA,GAAG,EAAEH,UAAU,CAACC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,UAAU,CAACI,WAAf,CAHF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,CAACK,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,IAAI;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACf,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKe,IAAI,CAACN,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIM,IAAI,CAACH,WAAT,CAFF,CADyB;AAAA,GAA1B,CADH,CALF,CADF,CADF;AAkBD,CAhCD;;GAAMd,c;UACWX,S,EAGkBI,Q;;;KAJ7BO,c;AAkCN,eAAeA,cAAf","sourcesContent":["import { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport { gql, useQuery, ApolloProvider } from '@apollo/client';\nimport client from '../../utils/apolloClient';  // Adjust the import based on where you save apolloClient.js\n\nconst GET_RESTAURANT_BY_ID = gql`\n  query getRestaurantById($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      description\n      image {\n        url\n      }\n      dishes {\n        id\n        name\n        description\n      }\n    }\n  }\n`;\n\nconst API_URL = process.env.API_URL || 'http://localhost:1337';\n\nconst RestaurantPage = () => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_BY_ID, {\n    variables: { id },\n    skip: !id\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error.message}</p>;\n\n  const restaurant = data.restaurant;\n\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <h1>{restaurant.name}</h1>\n        <img src={`${API_URL}${restaurant.image.url}`} alt={restaurant.name} />\n        <p>{restaurant.description}</p>\n\n        <ul>\n          {restaurant.dishes.map(dish => (\n            <li key={dish.id}>\n              <h2>{dish.name}</h2>\n              <p>{dish.description}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </ApolloProvider>\n  );\n};\n\nexport default RestaurantPage;\n"]},"metadata":{},"sourceType":"module"}